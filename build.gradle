plugins {
  id 'java'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '7.1.2'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

java {
  sourceCompatibility = JavaVersion.VERSION_16
  targetCompatibility = JavaVersion.VERSION_16
}

dependencies {
  implementation 'org.openjfx:javafx-controls:19'
  implementation 'org.openjfx:javafx-fxml:19'
  // Add other JavaFX modules as needed
}

javafx {
  version = '19'
  modules = ['javafx.controls', 'javafx.fxml']
}

application {
  mainModule = 'myModule'
  mainClass = 'airship.Main'
}

jar {
  manifest {
    attributes(
            'Main-Class': 'airship.Main'
    )
//    from {
//      configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    }
  }
}

shadowJar {
  mergeServiceFiles()
  manifest {
    attributes(
            'Main-Class': 'airship.Main'
    )
  }
  // Ensure that all dependencies are included
  configurations = [project.configurations.runtimeClasspath]
}

//run {
//   Use the 'runtimeClasspath' configuration for JavaFX modules
//  jvmArgs = [
//          '--module-path', configurations.runtimeClasspath.asPath,
//          '--add-modules', 'javafx.controls,javafx.fxml'
//  ]
//}

//tasks.withType(JavaExec) {
  // Ensures that all JavaExec tasks (including 'run') use the correct module path
//  doFirst {
//    jvmArgs = [
//            '--module-path', configurations.runtimeClasspath.asPath,
//            '--add-modules', 'javafx.controls,javafx.fxml'
//    ]
//  }
//}
